<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>geepy_web</display-name>
<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- springMVC前端控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation,指定springmvc的配置文件位置 需要配置处理器映射器，处理器适配器等 如果不配置contextConfigLocation，默认加载/WEB-INF/servlet名称-servlet.xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
	</servlet>
	
	<!-- url路径映射，即网页上什么样的url地址会请求服务器 -->
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- url-pattern的配置方式 1.*.action：访问以.action结尾的地址 由DispatcherServlet进行解析 
			2./：所有访问的url地址，都由DispatcherServlet解析，但是对于静态文件的解析需要配置不让DispatcherServlet解析 
			使用此种方法可以实现RESTful风格的url 3./*：此种配置错误，使用这种配置，最终转发到jsp页面时，DispatcherServlet会去解析jsp，不能根据jsp找到handler，会报错 -->
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>


	<!-- springMVC前端控制器，rest配置 -->
	<servlet>
		<servlet-name>springmvc_rest</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation,指定springmvc的配置文件位置 需要配置处理器映射器，处理器适配器等 如果不配置contextConfigLocation，默认加载/WEB-INF/servlet名称-servlet.xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
	</servlet>


	<!-- url路径映射，即网页上什么样的url地址会请求服务器 -->
	<servlet-mapping>
		<servlet-name>springmvc_rest</servlet-name>
		<!-- url-pattern的配置方式 1.*.action：访问以.action结尾的地址 由DispatcherServlet进行解析 
			2./：所有访问的url地址，都由DispatcherServlet解析，但是对于静态文件的解析需要配置不让DispatcherServlet解析 
			使用此种方法可以实现RESTful风格的url 3./*：此种配置错误，使用这种配置，最终转发到jsp页面时，DispatcherServlet会去解析jsp，不能根据jsp找到handler，会报错 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
	<!-- 解决post乱码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	
	
	
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <display-name>geepy_web</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>