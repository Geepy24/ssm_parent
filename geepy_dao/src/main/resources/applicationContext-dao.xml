<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd ">

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>

<!-- 配置数据源，使用dbcp -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="10"/>
		<property name="maxIdle" value="5"/>
	</bean>
<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的配置文件 -->
		<property name="configLocation" value="classpath:sqlMapConfig.xml" />
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		
	</bean>	
	



<!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动的创建代理对象，并且在spring的容器中注册 
	有了这个之后，mybatis的配置文件中扫描包加载配置文件的操作也不需要了，即SqlMapConfig.xml中的
	<mappers>
		<package name="mybatis.mapper"/>
	</mappers>
	自动扫描之后，扫描出来的mapper，bean的id为mapper类名首字母小写
-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的包名，不能使用通配符
		如果扫描多个包，每个包用,分隔
		 -->	
		<property name="basePackage" value="cn.geepy.blog.mapper,cn.geepy.blog.mapper.custom" />
		<!-- 这里要用sqlSessionFactoryBeanName，不能用其他 
		如果使用了sqlSessionFactoryBean，前面的加载db.properties会没有用
		-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>



</beans>